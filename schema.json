{
  "$id": "https://raw.githubusercontent.com/evg4b/uncors/main/schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "definitions": {
    "Duration": {
      "description": "Duration in human-readable format. Supported units are 'h' (hours), 'm' (minutes), 's' (seconds), 'ms' (milliseconds), 'us' (microseconds), 'ns' (nanoseconds).",
      "examples": [
        "3s",
        "1m 30s",
        "500ms",
        "1h 30m 15s 500ms 100us 200ns"
      ],
      "pattern": "^(\\d+h)?\\s*(\\d+m)?\\s*(\\d+s)?\\s*(\\d+ms)?\\s*(\\d+(us|Âµs))?\\s*(\\d+(ns))?$",
      "title": "Duration",
      "type": "string"
    },
    "FakeDataMockResponse": {
      "additionalProperties": false,
      "description": "Mock response definition based on fake data content",
      "properties": {
        "code": {
          "$ref": "#/definitions/StatusCode",
          "description": "HTTP status code which will be sent in the mock response"
        },
        "delay": {
          "$ref": "#/definitions/Duration",
          "description": "Delay before sending the mock response"
        },
        "fake": {
          "$ref": "#/definitions/FakeDataNode",
          "description": "Fake data definition"
        },
        "headers": {
          "$ref": "#/definitions/Headers",
          "description": "HTTP headers which will be sent in the mock response"
        },
        "seed": {
          "description": "If specified, the same data will be generated each time. If not specified, a random seed will be used.",
          "minimum": 0,
          "title": "Seed for random data generation",
          "type": "integer"
        }
      },
      "required": [
        "code",
        "fake"
      ],
      "type": "object"
    },
    "FakeDataNode": {
      "oneOf": [
        {
          "additionalProperties": false,
          "description": "Bank account number used for Automated Clearing House transactions",
          "examples": [
            "491527954328"
          ],
          "properties": {
            "type": {
              "const": "achaccount"
            }
          },
          "required": [
            "type"
          ],
          "title": "ACH Account Number",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Nine-digit code used in the U.S. for identifying a bank in ACH transactions",
          "examples": [
            "513715684"
          ],
          "properties": {
            "type": {
              "const": "achrouting"
            }
          },
          "required": [
            "type"
          ],
          "title": "ACH Routing Number",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Word describing or modifying a noun",
          "examples": [
            "genuine"
          ],
          "properties": {
            "type": {
              "const": "adjective"
            }
          },
          "required": [
            "type"
          ],
          "title": "Adjective",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Adjective used to point out specific things",
          "examples": [
            "this"
          ],
          "properties": {
            "type": {
              "const": "adjectivedemonstrative"
            }
          },
          "required": [
            "type"
          ],
          "title": "Demonstrative Adjective",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Adjective that provides detailed characteristics about a noun",
          "examples": [
            "brave"
          ],
          "properties": {
            "type": {
              "const": "adjectivedescriptive"
            }
          },
          "required": [
            "type"
          ],
          "title": "Descriptive Adjective",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Adjective describing a non-specific noun",
          "examples": [
            "few"
          ],
          "properties": {
            "type": {
              "const": "adjectiveindefinite"
            }
          },
          "required": [
            "type"
          ],
          "title": "Indefinite Adjective",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Adjective used to ask questions",
          "examples": [
            "what"
          ],
          "properties": {
            "type": {
              "const": "adjectiveinterrogative"
            }
          },
          "required": [
            "type"
          ],
          "title": "Interrogative Adjective",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Adjective indicating ownership or possession",
          "examples": [
            "my"
          ],
          "properties": {
            "type": {
              "const": "adjectivepossessive"
            }
          },
          "required": [
            "type"
          ],
          "title": "Possessive Adjective",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Adjective derived from a proper noun, often used to describe nationality or origin",
          "examples": [
            "Afghan"
          ],
          "properties": {
            "type": {
              "const": "adjectiveproper"
            }
          },
          "required": [
            "type"
          ],
          "title": "Proper Adjective",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Adjective that indicates the quantity or amount of something",
          "examples": [
            "a little"
          ],
          "properties": {
            "type": {
              "const": "adjectivequantitative"
            }
          },
          "required": [
            "type"
          ],
          "title": "Quantitative Adjective",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Word that modifies verbs, adjectives, or other adverbs",
          "examples": [
            "smoothly"
          ],
          "properties": {
            "type": {
              "const": "adverb"
            }
          },
          "required": [
            "type"
          ],
          "title": "Adverb",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Adverb that indicates the degree or intensity of an action or adjective",
          "examples": [
            "intensely"
          ],
          "properties": {
            "type": {
              "const": "adverbdegree"
            }
          },
          "required": [
            "type"
          ],
          "title": "Adverb Degree",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Adverb that specifies how often an action occurs with a clear frequency",
          "examples": [
            "hourly"
          ],
          "properties": {
            "type": {
              "const": "adverbfrequencydefinite"
            }
          },
          "required": [
            "type"
          ],
          "title": "Adverb Frequency Definite",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Adverb that specifies how often an action occurs without specifying a particular frequency",
          "examples": [
            "occasionally"
          ],
          "properties": {
            "type": {
              "const": "adverbfrequencyindefinite"
            }
          },
          "required": [
            "type"
          ],
          "title": "Adverb Frequency Indefinite",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Adverb that describes how an action is performed",
          "examples": [
            "stupidly"
          ],
          "properties": {
            "type": {
              "const": "adverbmanner"
            }
          },
          "required": [
            "type"
          ],
          "title": "Adverb Manner",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Adverb that indicates the location or direction of an action",
          "examples": [
            "east"
          ],
          "properties": {
            "type": {
              "const": "adverbplace"
            }
          },
          "required": [
            "type"
          ],
          "title": "Adverb Place",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Adverb that specifies the exact time an action occurs",
          "examples": [
            "now"
          ],
          "properties": {
            "type": {
              "const": "adverbtimedefinite"
            }
          },
          "required": [
            "type"
          ],
          "title": "Adverb Time Definite",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Adverb that gives a general or unspecified time frame",
          "examples": [
            "already"
          ],
          "properties": {
            "type": {
              "const": "adverbtimeindefinite"
            }
          },
          "required": [
            "type"
          ],
          "title": "Adverb Time Indefinite",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Name of a financial institution that offers banking services",
          "examples": [
            "Wells Fargo"
          ],
          "properties": {
            "type": {
              "const": "bankname"
            }
          },
          "required": [
            "type"
          ],
          "title": "Bank Name",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Classification of a bank based on its services and operations",
          "examples": [
            "Investment Bank"
          ],
          "properties": {
            "type": {
              "const": "banktype"
            }
          },
          "required": [
            "type"
          ],
          "title": "Bank Type",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Cryptographic identifier used to send and receive Bitcoin",
          "examples": [
            "1BoatSLRHtKNngkdXEeobR76b53LETtpyT"
          ],
          "properties": {
            "type": {
              "const": "bitcoinaddress"
            }
          },
          "required": [
            "type"
          ],
          "title": "Bitcoin Address",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Secret key that allows access and control over Bitcoin holdings",
          "examples": [
            "5HueCGU8rMjxEXxiPuD5BDuG6o5xjA7QkbPp"
          ],
          "properties": {
            "type": {
              "const": "bitcoinprivatekey"
            }
          },
          "required": [
            "type"
          ],
          "title": "Bitcoin Private Key",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Brief description or summary of a company's purpose, products, or services",
          "examples": [
            "word"
          ],
          "properties": {
            "type": {
              "const": "blurb"
            }
          },
          "required": [
            "type"
          ],
          "title": "Blurb",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Data type that represents one of two possible values, typically true or false",
          "examples": [
            "true"
          ],
          "properties": {
            "type": {
              "const": "bool"
            }
          },
          "required": [
            "type"
          ],
          "title": "Boolean",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Random bs company word",
          "examples": [
            "front-end"
          ],
          "properties": {
            "type": {
              "const": "bs"
            }
          },
          "required": [
            "type"
          ],
          "title": "BS",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Trendy or overused term often used in business to sound impressive",
          "examples": [
            "disintermediate"
          ],
          "properties": {
            "type": {
              "const": "buzzword"
            }
          },
          "required": [
            "type"
          ],
          "title": "Buzzword",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The specific identification string sent by the Google Chrome web browser when making requests on the internet",
          "examples": [
            "Mozilla/5.0 (X11; Linux i686) AppleWebKit/5312 (KHTML, like Gecko) Chrome/39.0.836.0 Mobile Safari/5312"
          ],
          "properties": {
            "type": {
              "const": "chromeuseragent"
            }
          },
          "required": [
            "type"
          ],
          "title": "Chrome User Agent",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Part of a country with significant population, often a central hub for culture and commerce",
          "examples": [
            "Marcelside"
          ],
          "properties": {
            "type": {
              "const": "city"
            }
          },
          "required": [
            "type"
          ],
          "title": "City",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Hue seen by the eye, returns the name of the color like red or blue",
          "examples": [
            "MediumOrchid"
          ],
          "properties": {
            "type": {
              "const": "color"
            }
          },
          "required": [
            "type"
          ],
          "title": "Color",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Designated official name of a business or organization",
          "examples": [
            "Moen, Pagac and Wuckert"
          ],
          "properties": {
            "type": {
              "const": "company"
            }
          },
          "required": [
            "type"
          ],
          "title": "Company",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Suffix at the end of a company name, indicating business structure, like 'Inc.' or 'LLC'",
          "examples": [
            "Inc"
          ],
          "properties": {
            "type": {
              "const": "companysuffix"
            }
          },
          "required": [
            "type"
          ],
          "title": "Company Suffix",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Word used to connect words or sentences",
          "examples": [
            "such as"
          ],
          "properties": {
            "type": {
              "const": "connective"
            }
          },
          "required": [
            "type"
          ],
          "title": "Connective",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Connective word used to indicate a cause-and-effect relationship between events or actions",
          "examples": [
            "an outcome of"
          ],
          "properties": {
            "type": {
              "const": "connectivecasual"
            }
          },
          "required": [
            "type"
          ],
          "title": "Connective Casual",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Connective word used to indicate a comparison between two or more things",
          "examples": [
            "in addition"
          ],
          "properties": {
            "type": {
              "const": "connectivecomparative"
            }
          },
          "required": [
            "type"
          ],
          "title": "Connective Comparitive",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Connective word used to express dissatisfaction or complaints about a situation",
          "examples": [
            "besides"
          ],
          "properties": {
            "type": {
              "const": "connectivecomplaint"
            }
          },
          "required": [
            "type"
          ],
          "title": "Connective Complaint",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Connective word used to provide examples or illustrations of a concept or idea",
          "examples": [
            "then"
          ],
          "properties": {
            "type": {
              "const": "connectiveexamplify"
            }
          },
          "required": [
            "type"
          ],
          "title": "Connective Examplify",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Connective word used to list or enumerate items or examples",
          "examples": [
            "firstly"
          ],
          "properties": {
            "type": {
              "const": "connectivelisting"
            }
          },
          "required": [
            "type"
          ],
          "title": "Connective Listing",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Connective word used to indicate a temporal relationship between events or actions",
          "examples": [
            "finally"
          ],
          "properties": {
            "type": {
              "const": "connectivetime"
            }
          },
          "required": [
            "type"
          ],
          "title": "Connective Time",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Nation with its own government and defined territory",
          "examples": [
            "United States of America"
          ],
          "properties": {
            "type": {
              "const": "country"
            }
          },
          "required": [
            "type"
          ],
          "title": "Country",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Shortened 2-letter form of a country's name",
          "examples": [
            "US"
          ],
          "properties": {
            "type": {
              "const": "countryabr"
            }
          },
          "required": [
            "type"
          ],
          "title": "Country Abbreviation",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Three or four-digit security code on a credit card",
          "examples": [
            "513"
          ],
          "properties": {
            "type": {
              "const": "creditcardcvv"
            }
          },
          "required": [
            "type"
          ],
          "title": "Credit Card CVV",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Expiration date of a credit card",
          "examples": [
            "01/27"
          ],
          "properties": {
            "type": {
              "const": "creditcardexp"
            }
          },
          "required": [
            "type"
          ],
          "title": "Credit Card Exp",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Unique number on a credit card used for electronic payments",
          "examples": [
            "4111111111111111"
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "bins": {
                  "default": "",
                  "description": "Optional list of prepended bin numbers to pick from",
                  "items": {
                    "type": "string"
                  },
                  "title": "Bins",
                  "type": "array"
                },
                "gaps": {
                  "default": "false",
                  "description": "Whether or not to have gaps in number",
                  "title": "Gaps",
                  "type": "boolean"
                },
                "types": {
                  "default": "all",
                  "description": "A select number of types you want to use when generating a credit card number",
                  "items": {
                    "type": "string"
                  },
                  "title": "Types",
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "creditcardnumber"
            }
          },
          "required": [
            "type"
          ],
          "title": "Credit Card Number",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Classification of credit cards based on the issuing company",
          "examples": [
            "Visa"
          ],
          "properties": {
            "type": {
              "const": "creditcardtype"
            }
          },
          "required": [
            "type"
          ],
          "title": "Credit Card Type",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Complete name of a specific currency used in financial transactions",
          "examples": [
            "United States Dollar"
          ],
          "properties": {
            "type": {
              "const": "currencylong"
            }
          },
          "required": [
            "type"
          ],
          "title": "Currency Long",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Short 3-letter ISO code used to represent a specific currency",
          "examples": [
            "USD"
          ],
          "properties": {
            "type": {
              "const": "currencyshort"
            }
          },
          "required": [
            "type"
          ],
          "title": "Currency Short",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Unique identifier for securities, especially bonds, in the United States and Canada",
          "examples": [
            "38259P508"
          ],
          "properties": {
            "type": {
              "const": "cusip"
            }
          },
          "required": [
            "type"
          ],
          "title": "CUSIP",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Representation of a specific day, month, and year, often used for chronological reference",
          "examples": [
            "2006-01-02T15:04:05Z07:00"
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "format": {
                  "default": "RFC3339",
                  "description": "Date time string format output. You may also use golang time format or java time format",
                  "title": "Format",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "date"
            }
          },
          "required": [
            "type"
          ],
          "title": "Date",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Random date between two ranges",
          "examples": [
            "1995-06-15T14:30:00Z"
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "enddate": {
                  "default": "2025-10-11",
                  "description": "End date time string",
                  "title": "End Date",
                  "type": "string"
                },
                "format": {
                  "default": "yyyy-MM-dd",
                  "description": "Date time string format",
                  "title": "Format",
                  "type": "string"
                },
                "startdate": {
                  "default": "1970-01-01",
                  "description": "Start date time string",
                  "title": "Start Date",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "daterange"
            }
          },
          "required": [
            "type"
          ],
          "title": "Date Range",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "24-hour period equivalent to one rotation of Earth on its axis",
          "examples": [
            "12"
          ],
          "properties": {
            "type": {
              "const": "day"
            }
          },
          "required": [
            "type"
          ],
          "title": "Day",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Numerical symbol used to represent numbers",
          "examples": [
            "0"
          ],
          "properties": {
            "type": {
              "const": "digit"
            }
          },
          "required": [
            "type"
          ],
          "title": "Digit",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "String of length N consisting of ASCII digits",
          "examples": [
            "0136459948"
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "default": "",
                  "description": "Number of digits to generate",
                  "minimum": 0,
                  "title": "Count",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "digitn"
            }
          },
          "required": [
            "type"
          ],
          "title": "DigitN",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Human-readable web address used to identify websites on the internet",
          "examples": [
            "centraltarget.biz"
          ],
          "properties": {
            "type": {
              "const": "domainname"
            }
          },
          "required": [
            "type"
          ],
          "title": "Domain Name",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The part of a domain name that comes after the last dot, indicating its type or purpose",
          "examples": [
            "org"
          ],
          "properties": {
            "type": {
              "const": "domainsuffix"
            }
          },
          "required": [
            "type"
          ],
          "title": "Domain Suffix",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Nine-digit Employer Identification Number used by businesses for tax purposes",
          "examples": [
            "12-3456789"
          ],
          "properties": {
            "type": {
              "const": "ein"
            }
          },
          "required": [
            "type"
          ],
          "title": "EIN",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Electronic mail address",
          "examples": [
            "markusmoen@pagac.net"
          ],
          "properties": {
            "type": {
              "const": "email"
            }
          },
          "required": [
            "type"
          ],
          "title": "Email",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Digital symbol expressing feelings or ideas in text messages and online chats",
          "examples": [
            "ð¤£"
          ],
          "properties": {
            "type": {
              "const": "emoji"
            }
          },
          "required": [
            "type"
          ],
          "title": "Emoji",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Alternative name or keyword used to represent a specific emoji in text or code",
          "examples": [
            "smile"
          ],
          "properties": {
            "type": {
              "const": "emojialias"
            }
          },
          "required": [
            "type"
          ],
          "title": "Emoji Alias",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Group or classification of emojis based on their common theme or use, like 'smileys' or 'animals'",
          "examples": [
            "Smileys \u0026 Emotion"
          ],
          "properties": {
            "type": {
              "const": "emojicategory"
            }
          },
          "required": [
            "type"
          ],
          "title": "Emoji Category",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Brief explanation of the meaning or emotion conveyed by an emoji",
          "examples": [
            "face vomiting"
          ],
          "properties": {
            "type": {
              "const": "emojidescription"
            }
          },
          "required": [
            "type"
          ],
          "title": "Emoji Description",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Label or keyword associated with an emoji to categorize or search for it easily",
          "examples": [
            "happy"
          ],
          "properties": {
            "type": {
              "const": "emojitag"
            }
          },
          "required": [
            "type"
          ],
          "title": "Emoji Tag",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The specific identification string sent by the Firefox web browser when making requests on the internet",
          "examples": [
            "Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_8_3 rv:7.0) Gecko/1900-07-01 Firefox/37.0"
          ],
          "properties": {
            "type": {
              "const": "firefoxuseragent"
            }
          },
          "required": [
            "type"
          ],
          "title": "Firefox User Agent",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The name given to a person at birth",
          "examples": [
            "Markus"
          ],
          "properties": {
            "type": {
              "const": "firstname"
            }
          },
          "required": [
            "type"
          ],
          "title": "First Name",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Floating-point number with 32-bit single precision (IEEE 754)",
          "examples": [
            "3.1128167e+37"
          ],
          "properties": {
            "type": {
              "const": "float32"
            }
          },
          "required": [
            "type"
          ],
          "title": "Float32",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Float32 value within a given range",
          "examples": [
            "914774.6"
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "max": {
                  "default": "",
                  "description": "Maximum float32 value",
                  "title": "Max",
                  "type": "number"
                },
                "min": {
                  "default": "",
                  "description": "Minimum float32 value",
                  "title": "Min",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "float32range"
            }
          },
          "required": [
            "type"
          ],
          "title": "Float32 Range",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Floating-point number with 64-bit double precision (IEEE 754)",
          "examples": [
            "1.644484108270445e+307"
          ],
          "properties": {
            "type": {
              "const": "float64"
            }
          },
          "required": [
            "type"
          ],
          "title": "Float64",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Float64 value within a given range",
          "examples": [
            "914774.5585333086"
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "max": {
                  "default": "",
                  "description": "Maximum float64 value",
                  "title": "Max",
                  "type": "number"
                },
                "min": {
                  "default": "",
                  "description": "Minimum float64 value",
                  "title": "Min",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "float64range"
            }
          },
          "required": [
            "type"
          ],
          "title": "Float64 Range",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Date that has occurred after the current moment in time",
          "examples": [
            "2107-01-24 13:00:35.820738079 +0000 UTC"
          ],
          "properties": {
            "type": {
              "const": "futuredate"
            }
          },
          "required": [
            "type"
          ],
          "title": "FutureDate",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Classification that identifies gender",
          "examples": [
            "male"
          ],
          "properties": {
            "type": {
              "const": "gender"
            }
          },
          "required": [
            "type"
          ],
          "title": "Gender",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Six-digit hexadecimal code representing a color in the RGB color model",
          "examples": [
            "#a99fb4"
          ],
          "properties": {
            "type": {
              "const": "hexcolor"
            }
          },
          "required": [
            "type"
          ],
          "title": "Hex Color",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "An activity pursued for leisure and pleasure",
          "examples": [
            "Swimming"
          ],
          "properties": {
            "type": {
              "const": "hobby"
            }
          },
          "required": [
            "type"
          ],
          "title": "Hobby",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Unit of time equal to 60 minutes",
          "examples": [
            "8"
          ],
          "properties": {
            "type": {
              "const": "hour"
            }
          },
          "required": [
            "type"
          ],
          "title": "Hour",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Verb used in HTTP requests to specify the desired action to be performed on a resource",
          "examples": [
            "HEAD"
          ],
          "properties": {
            "type": {
              "const": "httpmethod"
            }
          },
          "required": [
            "type"
          ],
          "title": "HTTP Method",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Random HTTP status code",
          "examples": [
            "200"
          ],
          "properties": {
            "type": {
              "const": "httpstatuscode"
            }
          },
          "required": [
            "type"
          ],
          "title": "HTTP Status Code",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Three-digit number returned by a web server to indicate the outcome of an HTTP request",
          "examples": [
            "404"
          ],
          "properties": {
            "type": {
              "const": "httpstatuscodesimple"
            }
          },
          "required": [
            "type"
          ],
          "title": "HTTP Status Code Simple",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Number indicating the version of the HTTP protocol used for communication between a client and a server",
          "examples": [
            "HTTP/1.1"
          ],
          "properties": {
            "type": {
              "const": "httpversion"
            }
          },
          "required": [
            "type"
          ],
          "title": "HTTP Version",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Signed integer",
          "examples": [
            "14866"
          ],
          "properties": {
            "type": {
              "const": "int"
            }
          },
          "required": [
            "type"
          ],
          "title": "Int",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Signed 16-bit integer, range â32,768â32,767",
          "examples": [
            "2200"
          ],
          "properties": {
            "type": {
              "const": "int16"
            }
          },
          "required": [
            "type"
          ],
          "title": "Int16",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Signed 32-bit integer, range â2,147,483,648â2,147,483,647",
          "examples": [
            "-1072427943"
          ],
          "properties": {
            "type": {
              "const": "int32"
            }
          },
          "required": [
            "type"
          ],
          "title": "Int32",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Signed 64-bit integer, range â9,223,372,036,854,775,808â9,223,372,036,854,775,807",
          "examples": [
            "-8379641344161477543"
          ],
          "properties": {
            "type": {
              "const": "int64"
            }
          },
          "required": [
            "type"
          ],
          "title": "Int64",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Signed 8-bit integer, range â128â127",
          "examples": [
            "24"
          ],
          "properties": {
            "type": {
              "const": "int8"
            }
          },
          "required": [
            "type"
          ],
          "title": "Int8",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Integer between 0 (inclusive) and n (exclusive)",
          "examples": [
            "32783"
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "n": {
                  "default": "2147483647",
                  "description": "Maximum int value (exclusive)",
                  "title": "N",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "intn"
            }
          },
          "required": [
            "type"
          ],
          "title": "IntN",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Numerical label assigned to devices on a network for identification and communication",
          "examples": [
            "222.83.191.222"
          ],
          "properties": {
            "type": {
              "const": "ipv4address"
            }
          },
          "required": [
            "type"
          ],
          "title": "IPv4 Address",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Numerical label assigned to devices on a network, providing a larger address space than IPv4 for internet communication",
          "examples": [
            "2001:cafe:8898:ee17:bc35:9064:5866:d019"
          ],
          "properties": {
            "type": {
              "const": "ipv6address"
            }
          },
          "required": [
            "type"
          ],
          "title": "IPv6 Address",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "International standard code for uniquely identifying securities worldwide",
          "examples": [
            "CVLRQCZBXQ97"
          ],
          "properties": {
            "type": {
              "const": "isin"
            }
          },
          "required": [
            "type"
          ],
          "title": "ISIN",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Word used to describe the duties, requirements, and nature of a job",
          "examples": [
            "Central"
          ],
          "properties": {
            "type": {
              "const": "jobdescriptor"
            }
          },
          "required": [
            "type"
          ],
          "title": "Job Descriptor",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Random job level",
          "examples": [
            "Assurance"
          ],
          "properties": {
            "type": {
              "const": "joblevel"
            }
          },
          "required": [
            "type"
          ],
          "title": "Job Level",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Specific title for a position or role within a company or organization",
          "examples": [
            "Director"
          ],
          "properties": {
            "type": {
              "const": "jobtitle"
            }
          },
          "required": [
            "type"
          ],
          "title": "Job Title",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "System of communication using symbols, words, and grammar to convey meaning between individuals",
          "examples": [
            "Kazakh"
          ],
          "properties": {
            "type": {
              "const": "language"
            }
          },
          "required": [
            "type"
          ],
          "title": "Language",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Shortened form of a language's name",
          "examples": [
            "kk"
          ],
          "properties": {
            "type": {
              "const": "languageabbreviation"
            }
          },
          "required": [
            "type"
          ],
          "title": "Language Abbreviation",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The family name or surname of an individual",
          "examples": [
            "Daniel"
          ],
          "properties": {
            "type": {
              "const": "lastname"
            }
          },
          "required": [
            "type"
          ],
          "title": "Last Name",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Geographic coordinate specifying north-south position on Earth's surface",
          "examples": [
            "-73.534056"
          ],
          "properties": {
            "type": {
              "const": "latitude"
            }
          },
          "required": [
            "type"
          ],
          "title": "Latitude",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Character or symbol from the American Standard Code for Information Interchange (ASCII) character set",
          "examples": [
            "g"
          ],
          "properties": {
            "type": {
              "const": "letter"
            }
          },
          "required": [
            "type"
          ],
          "title": "Letter",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "ASCII string with length N",
          "examples": [
            "gbRMaRxHki"
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "count": {
                  "default": "",
                  "description": "Number of digits to generate",
                  "minimum": 0,
                  "title": "Count",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "lettern"
            }
          },
          "required": [
            "type"
          ],
          "title": "LetterN",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Classification used in logging to indicate the severity or priority of a log entry",
          "examples": [
            "error"
          ],
          "properties": {
            "type": {
              "const": "loglevel"
            }
          },
          "required": [
            "type"
          ],
          "title": "Log Level",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Geographic coordinate indicating east-west position on Earth's surface",
          "examples": [
            "-147.068112"
          ],
          "properties": {
            "type": {
              "const": "longitude"
            }
          },
          "required": [
            "type"
          ],
          "title": "Longitude",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Paragraph of the Lorem Ipsum placeholder text used in design and publishing",
          "examples": [
            "Quia quae repellat consequatur quidem nisi quo qui voluptatum accusantium quisquam amet. Quas et ut non dolorem ipsam aut enim assumenda mollitia harum ut. Dicta similique veniam nulla voluptas at excepturi non ad maxime at non. Eaque hic repellat praesentium voluptatem qui consequuntur dolor iusto autem velit aut. Fugit tempore exercitationem harum consequatur voluptatum modi minima aut eaque et et.\n\nAut ea voluptatem dignissimos expedita odit tempore quod aut beatae ipsam iste. Minus voluptatibus dolorem maiores eius sed nihil vel enim odio voluptatem accusamus. Natus quibusdam temporibus tenetur cumque sint necessitatibus dolorem ex ducimus iusto ex. Voluptatem neque dicta explicabo officiis et ducimus sit ut ut praesentium pariatur. Illum molestias nisi at dolore ut voluptatem accusantium et fugiat et ut.\n\nExplicabo incidunt reprehenderit non quia dignissimos recusandae vitae soluta quia et quia. Aut veniam voluptas consequatur placeat sapiente non eveniet voluptatibus magni velit eum. Nobis vel repellendus sed est qui autem laudantium quidem quam ullam consequatur. Aut iusto ut commodi similique quae voluptatem atque qui fugiat eum aut. Quis distinctio consequatur voluptatem vel aliquid aut laborum facere officiis iure tempora."
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "paragraphcount": {
                  "default": "2",
                  "description": "Number of paragraphs",
                  "title": "Paragraph Count",
                  "type": "integer"
                },
                "paragraphseparator": {
                  "default": "\u003cbr /\u003e",
                  "description": "String value to add between paragraphs",
                  "title": "Paragraph Separator",
                  "type": "string"
                },
                "sentencecount": {
                  "default": "2",
                  "description": "Number of sentences in a paragraph",
                  "title": "Sentence Count",
                  "type": "integer"
                },
                "wordcount": {
                  "default": "5",
                  "description": "Number of words in a sentence",
                  "title": "Word Count",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "loremipsumparagraph"
            }
          },
          "required": [
            "type"
          ],
          "title": "Lorem Ipsum Paragraph",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Sentence of the Lorem Ipsum placeholder text used in design and publishing",
          "examples": [
            "Quia quae repellat consequatur quidem."
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "wordcount": {
                  "default": "5",
                  "description": "Number of words in a sentence",
                  "title": "Word Count",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "loremipsumsentence"
            }
          },
          "required": [
            "type"
          ],
          "title": "Lorem Ipsum Sentence",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Word of the Lorem Ipsum placeholder text used in design and publishing",
          "examples": [
            "quia"
          ],
          "properties": {
            "type": {
              "const": "loremipsumword"
            }
          },
          "required": [
            "type"
          ],
          "title": "Lorem Ipsum Word",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Unique identifier assigned to network interfaces, often used in Ethernet networks",
          "examples": [
            "cb:ce:06:94:22:e9"
          ],
          "properties": {
            "type": {
              "const": "macaddress"
            }
          },
          "required": [
            "type"
          ],
          "title": "MAC Address",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Name between a person's first name and last name",
          "examples": [
            "Belinda"
          ],
          "properties": {
            "type": {
              "const": "middlename"
            }
          },
          "required": [
            "type"
          ],
          "title": "Middle Name",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Unit of time equal to 60 seconds",
          "examples": [
            "34"
          ],
          "properties": {
            "type": {
              "const": "minute"
            }
          },
          "required": [
            "type"
          ],
          "title": "Minute",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Division of the year, typically 30 or 31 days long",
          "examples": [
            "1"
          ],
          "properties": {
            "type": {
              "const": "month"
            }
          },
          "required": [
            "type"
          ],
          "title": "Month",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "String representation of a month name",
          "examples": [
            "September"
          ],
          "properties": {
            "type": {
              "const": "monthstring"
            }
          },
          "required": [
            "type"
          ],
          "title": "Month String",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The given and family name of an individual",
          "examples": [
            "Markus Moen"
          ],
          "properties": {
            "type": {
              "const": "name"
            }
          },
          "required": [
            "type"
          ],
          "title": "Name",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "A title or honorific added before a person's name",
          "examples": [
            "Mr."
          ],
          "properties": {
            "type": {
              "const": "nameprefix"
            }
          },
          "required": [
            "type"
          ],
          "title": "Name Prefix",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "A title or designation added after a person's name",
          "examples": [
            "Jr."
          ],
          "properties": {
            "type": {
              "const": "namesuffix"
            }
          },
          "required": [
            "type"
          ],
          "title": "Name Suffix",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Unit of time equal to one billionth (10^-9) of a second",
          "examples": [
            "196446360"
          ],
          "properties": {
            "type": {
              "const": "nanosecond"
            }
          },
          "required": [
            "type"
          ],
          "title": "Nanosecond",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Person, place, thing, or idea, named or referred to in a sentence",
          "examples": [
            "aunt"
          ],
          "properties": {
            "type": {
              "const": "noun"
            }
          },
          "required": [
            "type"
          ],
          "title": "Noun",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Ideas, qualities, or states that cannot be perceived with the five senses",
          "examples": [
            "confusion"
          ],
          "properties": {
            "type": {
              "const": "nounabstract"
            }
          },
          "required": [
            "type"
          ],
          "title": "Noun Abstract",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Group of animals, like a 'pack' of wolves or a 'flock' of birds",
          "examples": [
            "party"
          ],
          "properties": {
            "type": {
              "const": "nouncollectiveanimal"
            }
          },
          "required": [
            "type"
          ],
          "title": "Noun Collective Animal",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Group of people or things regarded as a unit",
          "examples": [
            "body"
          ],
          "properties": {
            "type": {
              "const": "nouncollectivepeople"
            }
          },
          "required": [
            "type"
          ],
          "title": "Noun Collective People",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Group of objects or items, such as a 'bundle' of sticks or a 'cluster' of grapes",
          "examples": [
            "hand"
          ],
          "properties": {
            "type": {
              "const": "nouncollectivething"
            }
          },
          "required": [
            "type"
          ],
          "title": "Noun Collective Thing",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "General name for people, places, or things, not specific or unique",
          "examples": [
            "part"
          ],
          "properties": {
            "type": {
              "const": "nouncommon"
            }
          },
          "required": [
            "type"
          ],
          "title": "Noun Common",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Names for physical entities experienced through senses like sight, touch, smell, or taste",
          "examples": [
            "snowman"
          ],
          "properties": {
            "type": {
              "const": "nounconcrete"
            }
          },
          "required": [
            "type"
          ],
          "title": "Noun Concrete",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Items that can be counted individually",
          "examples": [
            "neck"
          ],
          "properties": {
            "type": {
              "const": "nouncountable"
            }
          },
          "required": [
            "type"
          ],
          "title": "Noun Countable",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Items that can't be counted individually",
          "examples": [
            "seafood"
          ],
          "properties": {
            "type": {
              "const": "noununcountable"
            }
          },
          "required": [
            "type"
          ],
          "title": "Noun Uncountable",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Integer used for counting or measuring, with optional bounds",
          "examples": [
            "14866"
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "max": {
                  "default": "2147483647",
                  "description": "Maximum integer value",
                  "title": "Max",
                  "type": "integer"
                },
                "min": {
                  "default": "-2147483648",
                  "description": "Minimum integer value",
                  "title": "Min",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "number"
            }
          },
          "required": [
            "type"
          ],
          "title": "Number",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The specific identification string sent by the Opera web browser when making requests on the internet",
          "examples": [
            "Opera/8.39 (Macintosh; U; PPC Mac OS X 10_8_7; en-US) Presto/2.9.335 Version/10.00"
          ],
          "properties": {
            "type": {
              "const": "operauseragent"
            }
          },
          "required": [
            "type"
          ],
          "title": "Opera User Agent",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Distinct section of writing covering a single theme, composed of multiple sentences",
          "examples": [
            "Interpret context record river mind press self should compare property outcome divide. Combine approach sustain consult discover explanation direct address church husband seek army. Begin own act welfare replace press suspect stay link place manchester specialist. Arrive price satisfy sign force application hair train provide basis right pay. Close mark teacher strengthen information attempt head touch aim iron tv take."
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "paragraphcount": {
                  "default": "2",
                  "description": "Number of paragraphs",
                  "title": "Paragraph Count",
                  "type": "integer"
                },
                "paragraphseparator": {
                  "default": "\u003cbr /\u003e",
                  "description": "String value to add between paragraphs",
                  "title": "Paragraph Separator",
                  "type": "string"
                },
                "sentencecount": {
                  "default": "2",
                  "description": "Number of sentences in a paragraph",
                  "title": "Sentence Count",
                  "type": "integer"
                },
                "wordcount": {
                  "default": "5",
                  "description": "Number of words in a sentence",
                  "title": "Word Count",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "paragraph"
            }
          },
          "required": [
            "type"
          ],
          "title": "Paragraph",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Secret word or phrase used to authenticate access to a system or account",
          "examples": [
            "EEP+wwpk 4lU-eHNXlJZ4n K9%v\u0026TZ9e"
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "length": {
                  "default": "12",
                  "description": "Number of characters in password",
                  "title": "Length",
                  "type": "integer"
                },
                "lower": {
                  "default": "true",
                  "description": "Whether or not to add lower case characters",
                  "title": "Lower",
                  "type": "boolean"
                },
                "numeric": {
                  "default": "true",
                  "description": "Whether or not to add numeric characters",
                  "title": "Numeric",
                  "type": "boolean"
                },
                "space": {
                  "default": "false",
                  "description": "Whether or not to add spaces",
                  "title": "Space",
                  "type": "boolean"
                },
                "special": {
                  "default": "true",
                  "description": "Whether or not to add special characters",
                  "title": "Special",
                  "type": "boolean"
                },
                "upper": {
                  "default": "true",
                  "description": "Whether or not to add upper case characters",
                  "title": "Upper",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "password"
            }
          },
          "required": [
            "type"
          ],
          "title": "Password",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Date that has occurred before the current moment in time",
          "examples": [
            "2007-01-24 13:00:35.820738079 +0000 UTC"
          ],
          "properties": {
            "type": {
              "const": "pastdate"
            }
          },
          "required": [
            "type"
          ],
          "title": "PastDate",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Numerical sequence used to contact individuals via telephone or mobile devices",
          "examples": [
            "6136459948"
          ],
          "properties": {
            "type": {
              "const": "phone"
            }
          },
          "required": [
            "type"
          ],
          "title": "Phone",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Formatted phone number of a person",
          "examples": [
            "136-459-9489"
          ],
          "properties": {
            "type": {
              "const": "phoneformatted"
            }
          },
          "required": [
            "type"
          ],
          "title": "Phone Formatted",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "A small group of words standing together",
          "examples": [
            "time will tell"
          ],
          "properties": {
            "type": {
              "const": "phrase"
            }
          },
          "required": [
            "type"
          ],
          "title": "Phrase",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Words used to express the relationship of a noun or pronoun to other words in a sentence",
          "examples": [
            "other than"
          ],
          "properties": {
            "type": {
              "const": "preposition"
            }
          },
          "required": [
            "type"
          ],
          "title": "Preposition",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Preposition that can be formed by combining two or more prepositions",
          "examples": [
            "according to"
          ],
          "properties": {
            "type": {
              "const": "prepositioncompound"
            }
          },
          "required": [
            "type"
          ],
          "title": "Preposition Compound",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Two-word combination preposition, indicating a complex relation",
          "examples": [
            "before"
          ],
          "properties": {
            "type": {
              "const": "prepositiondouble"
            }
          },
          "required": [
            "type"
          ],
          "title": "Preposition Double",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Single-word preposition showing relationships between 2 parts of a sentence",
          "examples": [
            "out"
          ],
          "properties": {
            "type": {
              "const": "prepositionsimple"
            }
          },
          "required": [
            "type"
          ],
          "title": "Preposition Simple",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The amount of money assigned to a product, service, or asset in a transaction",
          "examples": [
            "92.26"
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "max": {
                  "default": "1000",
                  "description": "Maximum price value",
                  "title": "Max",
                  "type": "number"
                },
                "min": {
                  "default": "0",
                  "description": "Minimum price value",
                  "title": "Min",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "price"
            }
          },
          "required": [
            "type"
          ],
          "title": "Price",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "ISBN-10 or ISBN-13 identifier for books",
          "examples": [
            "978-1-4028-9462-6"
          ],
          "properties": {
            "type": {
              "const": "productisbn"
            }
          },
          "required": [
            "type"
          ],
          "title": "Product ISBN",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Word used in place of a noun to avoid repetition",
          "examples": [
            "me"
          ],
          "properties": {
            "type": {
              "const": "pronoun"
            }
          },
          "required": [
            "type"
          ],
          "title": "Pronoun",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Pronoun that points out specific people or things",
          "examples": [
            "this"
          ],
          "properties": {
            "type": {
              "const": "pronoundemonstrative"
            }
          },
          "required": [
            "type"
          ],
          "title": "Pronoun Demonstrative",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Pronoun used to ask questions",
          "examples": [
            "what"
          ],
          "properties": {
            "type": {
              "const": "pronouninterrogative"
            }
          },
          "required": [
            "type"
          ],
          "title": "Pronoun Interrogative",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Pronoun used as the object of a verb or preposition",
          "examples": [
            "it"
          ],
          "properties": {
            "type": {
              "const": "pronounobject"
            }
          },
          "required": [
            "type"
          ],
          "title": "Pronoun Object",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Pronoun referring to a specific persons or things",
          "examples": [
            "it"
          ],
          "properties": {
            "type": {
              "const": "pronounpersonal"
            }
          },
          "required": [
            "type"
          ],
          "title": "Pronoun Personal",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Pronoun indicating ownership or belonging",
          "examples": [
            "mine"
          ],
          "properties": {
            "type": {
              "const": "pronounpossessive"
            }
          },
          "required": [
            "type"
          ],
          "title": "Pronoun Possessive",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Pronoun referring back to the subject of the sentence",
          "examples": [
            "myself"
          ],
          "properties": {
            "type": {
              "const": "pronounreflective"
            }
          },
          "required": [
            "type"
          ],
          "title": "Pronoun Reflective",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Pronoun that introduces a clause, referring back to a noun or pronoun",
          "examples": [
            "as"
          ],
          "properties": {
            "type": {
              "const": "pronounrelative"
            }
          },
          "required": [
            "type"
          ],
          "title": "Pronoun Relative",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Statement formulated to inquire or seek clarification",
          "examples": [
            "Roof chia echo?"
          ],
          "properties": {
            "type": {
              "const": "question"
            }
          },
          "required": [
            "type"
          ],
          "title": "Question",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Direct repetition of someone else's words",
          "examples": [
            "\"Roof chia echo.\" - Lura Lockman"
          ],
          "properties": {
            "type": {
              "const": "quote"
            }
          },
          "required": [
            "type"
          ],
          "title": "Quote",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Color defined by red, green, and blue light values",
          "examples": [
            "[85, 224, 195]"
          ],
          "properties": {
            "type": {
              "const": "rgbcolor"
            }
          },
          "required": [
            "type"
          ],
          "title": "RGB Color",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The specific identification string sent by the Safari web browser when making requests on the internet",
          "examples": [
            "Mozilla/5.0 (iPad; CPU OS 8_3_2 like Mac OS X; en-US) AppleWebKit/531.15.6 (KHTML, like Gecko) Version/4.0.5 Mobile/8B120 Safari/6531.15.6"
          ],
          "properties": {
            "type": {
              "const": "safariuseragent"
            }
          },
          "required": [
            "type"
          ],
          "title": "Safari User Agent",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Unit of time equal to 1/60th of a minute",
          "examples": [
            "43"
          ],
          "properties": {
            "type": {
              "const": "second"
            }
          },
          "required": [
            "type"
          ],
          "title": "Second",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Set of words expressing a statement, question, exclamation, or command",
          "examples": [
            "Interpret context record river mind."
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "wordcount": {
                  "default": "5",
                  "description": "Number of words in a sentence",
                  "title": "Word Count",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "sentence"
            }
          },
          "required": [
            "type"
          ],
          "title": "Sentence",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Catchphrase or motto used by a company to represent its brand or values",
          "examples": [
            "Universal seamless Focus, interactive."
          ],
          "properties": {
            "type": {
              "const": "slogan"
            }
          },
          "required": [
            "type"
          ],
          "title": "Slogan",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The artist of maker of song",
          "examples": [
            "Dua Lipa"
          ],
          "properties": {
            "type": {
              "const": "songartist"
            }
          },
          "required": [
            "type"
          ],
          "title": "Song Artist",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Category that classifies song based on common themes, styles, and storytelling approaches",
          "examples": [
            "Action"
          ],
          "properties": {
            "type": {
              "const": "songgenre"
            }
          },
          "required": [
            "type"
          ],
          "title": "Genre",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Title or name of a specific song used for identification and reference",
          "examples": [
            "New Rules"
          ],
          "properties": {
            "type": {
              "const": "songname"
            }
          },
          "required": [
            "type"
          ],
          "title": "Song Name",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Unique nine-digit identifier used for government and financial purposes in the United States",
          "examples": [
            "296446360"
          ],
          "properties": {
            "type": {
              "const": "ssn"
            }
          },
          "required": [
            "type"
          ],
          "title": "SSN",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Governmental division within a country, often having its own laws and government",
          "examples": [
            "Illinois"
          ],
          "properties": {
            "type": {
              "const": "state"
            }
          },
          "required": [
            "type"
          ],
          "title": "State",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Shortened 2-letter form of a state or province",
          "examples": [
            "IL"
          ],
          "properties": {
            "type": {
              "const": "stateabr"
            }
          },
          "required": [
            "type"
          ],
          "title": "State Abbreviation",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Public road in a city or town, typically with houses and buildings on each side",
          "examples": [
            "364 East Rapidsborough"
          ],
          "properties": {
            "type": {
              "const": "street"
            }
          },
          "required": [
            "type"
          ],
          "title": "Street",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Name given to a specific road or street",
          "examples": [
            "View"
          ],
          "properties": {
            "type": {
              "const": "streetname"
            }
          },
          "required": [
            "type"
          ],
          "title": "Street Name",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Numerical identifier assigned to a street",
          "examples": [
            "13645"
          ],
          "properties": {
            "type": {
              "const": "streetnumber"
            }
          },
          "required": [
            "type"
          ],
          "title": "Street Number",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Directional or descriptive term preceding a street name (e.g., 'East', 'N')",
          "examples": [
            "East"
          ],
          "properties": {
            "type": {
              "const": "streetprefix"
            }
          },
          "required": [
            "type"
          ],
          "title": "Street Prefix",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Designation at the end of a street name indicating type (e.g., 'Ave', 'St')",
          "examples": [
            "Ave"
          ],
          "properties": {
            "type": {
              "const": "streetsuffix"
            }
          },
          "required": [
            "type"
          ],
          "title": "Street Suffix",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Sentence of the Lorem Ipsum placeholder text used in design and publishing",
          "examples": [
            "Quia quae repellat consequatur quidem."
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "wordcount": {
                  "default": "5",
                  "description": "Number of words in a sentence",
                  "title": "Word Count",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "string"
            }
          },
          "required": [
            "type"
          ],
          "title": "Lorem Ipsum String",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Random time string in the specified format",
          "examples": [
            "14:30:25"
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "format": {
                  "default": "HH:mm:ss",
                  "description": "Time format string. Supports Java time format patterns or Go time format patterns",
                  "title": "Format",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "time"
            }
          },
          "required": [
            "type"
          ],
          "title": "Time",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Random time string between start and end times",
          "examples": [
            "10:15:30"
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "endtime": {
                  "default": "23:59:59",
                  "description": "End time string in the specified format",
                  "title": "End Time",
                  "type": "string"
                },
                "format": {
                  "default": "HH:mm:ss",
                  "description": "Time format string. Supports Java time format patterns or Go time format patterns",
                  "title": "Format",
                  "type": "string"
                },
                "starttime": {
                  "default": "00:00:00",
                  "description": "Start time string in the specified format",
                  "title": "Start Time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "timerange"
            }
          },
          "required": [
            "type"
          ],
          "title": "Time Range",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Region where the same standard time is used, based on longitudinal divisions of the Earth",
          "examples": [
            "Kaliningrad Standard Time"
          ],
          "properties": {
            "type": {
              "const": "timezone"
            }
          },
          "required": [
            "type"
          ],
          "title": "Timezone",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Abbreviated 3-letter word of a timezone",
          "examples": [
            "KST"
          ],
          "properties": {
            "type": {
              "const": "timezoneabv"
            }
          },
          "required": [
            "type"
          ],
          "title": "Timezone Abbreviation",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Full name of a timezone",
          "examples": [
            "(UTC+03:00) Kaliningrad, Minsk"
          ],
          "properties": {
            "type": {
              "const": "timezonefull"
            }
          },
          "required": [
            "type"
          ],
          "title": "Timezone Full",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The difference in hours from Coordinated Universal Time (UTC) for a specific region",
          "examples": [
            "-5"
          ],
          "properties": {
            "type": {
              "const": "timezoneoffset"
            }
          },
          "required": [
            "type"
          ],
          "title": "Timezone Offset",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Geographic area sharing the same standard time",
          "examples": [
            "America/Alaska"
          ],
          "properties": {
            "type": {
              "const": "timezoneregion"
            }
          },
          "required": [
            "type"
          ],
          "title": "Timezone Region",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Unsigned integer (nonnegative whole number)",
          "examples": [
            "14866"
          ],
          "properties": {
            "type": {
              "const": "uint"
            }
          },
          "required": [
            "type"
          ],
          "title": "Uint",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Unsigned 16-bit integer, range 0â65,535",
          "examples": [
            "34968"
          ],
          "properties": {
            "type": {
              "const": "uint16"
            }
          },
          "required": [
            "type"
          ],
          "title": "Uint16",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Unsigned 32-bit integer, range 0â4,294,967,295",
          "examples": [
            "1075055705"
          ],
          "properties": {
            "type": {
              "const": "uint32"
            }
          },
          "required": [
            "type"
          ],
          "title": "Uint32",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Unsigned 64-bit integer, range 0â18,446,744,073,709,551,615",
          "examples": [
            "843730692693298265"
          ],
          "properties": {
            "type": {
              "const": "uint64"
            }
          },
          "required": [
            "type"
          ],
          "title": "Uint64",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Unsigned 8-bit integer, range 0â255",
          "examples": [
            "152"
          ],
          "properties": {
            "type": {
              "const": "uint8"
            }
          },
          "required": [
            "type"
          ],
          "title": "Uint8",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Unsigned integer between 0 (inclusive) and n (exclusive)",
          "examples": [
            "32783"
          ],
          "properties": {
            "options": {
              "additionalProperties": false,
              "properties": {
                "n": {
                  "default": "4294967295",
                  "description": "Maximum uint value (exclusive)",
                  "minimum": 0,
                  "title": "N",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": {
              "const": "uintn"
            }
          },
          "required": [
            "type"
          ],
          "title": "UintN",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Unit identifier within a building, such as apartment number, suite, or office",
          "examples": [
            "Apt 123"
          ],
          "properties": {
            "type": {
              "const": "unit"
            }
          },
          "required": [
            "type"
          ],
          "title": "Unit",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Web address that specifies the location of a resource on the internet",
          "examples": [
            "http://www.principalproductize.biz/target"
          ],
          "properties": {
            "type": {
              "const": "url"
            }
          },
          "required": [
            "type"
          ],
          "title": "URL",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "String sent by a web browser to identify itself when requesting web content",
          "examples": [
            "Mozilla/5.0 (Windows NT 5.0) AppleWebKit/5362 (KHTML, like Gecko) Chrome/37.0.834.0 Mobile Safari/5362"
          ],
          "properties": {
            "type": {
              "const": "useragent"
            }
          },
          "required": [
            "type"
          ],
          "title": "User Agent",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Unique identifier assigned to a user for accessing an account or system",
          "examples": [
            "Daniel1364"
          ],
          "properties": {
            "type": {
              "const": "username"
            }
          },
          "required": [
            "type"
          ],
          "title": "Username",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "128-bit identifier used to uniquely identify objects or entities in computer systems",
          "examples": [
            "590c1440-9888-45b0-bd51-a817ee07c3f2"
          ],
          "properties": {
            "type": {
              "const": "uuid"
            }
          },
          "required": [
            "type"
          ],
          "title": "UUID",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Word expressing an action, event or state",
          "examples": [
            "release"
          ],
          "properties": {
            "type": {
              "const": "verb"
            }
          },
          "required": [
            "type"
          ],
          "title": "Verb",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Verb indicating a physical or mental action",
          "examples": [
            "close"
          ],
          "properties": {
            "type": {
              "const": "verbaction"
            }
          },
          "required": [
            "type"
          ],
          "title": "Action Verb",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Auxiliary verb that helps the main verb complete the sentence",
          "examples": [
            "be"
          ],
          "properties": {
            "type": {
              "const": "verbhelping"
            }
          },
          "required": [
            "type"
          ],
          "title": "Helping Verb",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Verb that connects the subject of a sentence to a subject complement",
          "examples": [
            "was"
          ],
          "properties": {
            "type": {
              "const": "verblinking"
            }
          },
          "required": [
            "type"
          ],
          "title": "Linking Verb",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Day of the week excluding the weekend",
          "examples": [
            "Friday"
          ],
          "properties": {
            "type": {
              "const": "weekday"
            }
          },
          "required": [
            "type"
          ],
          "title": "Weekday",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Basic unit of language representing a concept or thing, consisting of letters and having meaning",
          "examples": [
            "man"
          ],
          "properties": {
            "type": {
              "const": "word"
            }
          },
          "required": [
            "type"
          ],
          "title": "Word",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Period of 365 days, the time Earth takes to orbit the Sun",
          "examples": [
            "1900"
          ],
          "properties": {
            "type": {
              "const": "year"
            }
          },
          "required": [
            "type"
          ],
          "title": "Year",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Numerical code for postal address sorting, specific to a geographic area",
          "examples": [
            "13645"
          ],
          "properties": {
            "type": {
              "const": "zip"
            }
          },
          "required": [
            "type"
          ],
          "title": "Zip",
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "properties": {
              "additionalProperties": {
                "$ref": "#/definitions/FakeDataNode"
              },
              "type": "object"
            },
            "type": {
              "const": "object"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "count": {
              "type": "integer"
            },
            "item": {
              "$ref": "#/definitions/FakeDataNode"
            },
            "type": {
              "const": "array"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ]
    },
    "FileMockResponse": {
      "additionalProperties": false,
      "description": "Mock response definition based on file content",
      "properties": {
        "code": {
          "$ref": "#/definitions/StatusCode",
          "description": "HTTP status code which will be sent in the mock response"
        },
        "delay": {
          "$ref": "#/definitions/Duration",
          "description": "Delay before sending the mock response"
        },
        "file": {
          "description": "Path to the file whose content will be sent in the mock response",
          "type": "string"
        },
        "headers": {
          "$ref": "#/definitions/Headers",
          "description": "HTTP headers which will be sent in the mock response"
        }
      },
      "required": [
        "code",
        "file"
      ],
      "type": "object"
    },
    "Headers": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "HTTP headers definition",
      "minProperties": 1,
      "type": "object"
    },
    "Mapping": {
      "oneOf": [
        {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Host mapping definition",
          "maxProperties": 1,
          "minProperties": 1,
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Host mapping definition",
          "properties": {
            "cache": {
              "description": "List the paths that will be cached.",
              "items": {
                "type": "string"
              },
              "minItems": 1,
              "type": "array"
            },
            "from": {
              "description": "The local host with protocol and port for the resource from which proxying will take place (e.g., http://localhost:8080). Port defaults to 80 for HTTP and 443 for HTTPS if not specified.",
              "type": "string"
            },
            "mocks": {
              "description": "List the mocked requests",
              "items": {
                "$ref": "#/definitions/Mock"
              },
              "minItems": 1,
              "type": "array"
            },
            "options-handling": {
              "$ref": "#/definitions/OptionsHandling"
            },
            "rewrites": {
              "description": "List of paths that will be rewritten.",
              "items": {
                "$ref": "#/definitions/Rewrite"
              },
              "minItems": 1,
              "type": "array"
            },
            "statics": {
              "description": "List of paths that will be served from the directory.",
              "items": {
                "$ref": "#/definitions/StaticDirectory"
              },
              "minItems": 1,
              "type": "array"
            },
            "to": {
              "description": "The target host and protocol for the resource that needs to be proxied",
              "type": "string"
            }
          },
          "required": [
            "from",
            "to"
          ],
          "type": "object"
        }
      ]
    },
    "Method": {
      "enum": [
        "GET",
        "HEAD",
        "POST",
        "PUT",
        "DELETE",
        "CONNECT",
        "OPTIONS",
        "TRACE",
        "PATCH"
      ],
      "type": "string"
    },
    "Mock": {
      "additionalProperties": false,
      "description": "Mocked request definition",
      "properties": {
        "headers": {
          "$ref": "#/definitions/Headers",
          "description": "Mocked request headers"
        },
        "method": {
          "$ref": "#/definitions/Method",
          "description": "Mocked request method"
        },
        "path": {
          "description": "Mocked request path",
          "type": "string"
        },
        "queries": {
          "$ref": "#/definitions/Queries",
          "description": "Mocked request queries"
        },
        "response": {
          "description": "Mock response definition",
          "oneOf": [
            {
              "$ref": "#/definitions/RawMockResponse"
            },
            {
              "$ref": "#/definitions/FileMockResponse"
            },
            {
              "$ref": "#/definitions/FakeDataMockResponse"
            }
          ]
        }
      },
      "required": [
        "path",
        "response"
      ],
      "type": "object"
    },
    "OptionsHandling": {
      "description": "OPTIONS request handling configuration",
      "properties": {
        "disabled": {
          "default": false,
          "description": "Disable OPTIONS request handling and all requests will be proxied to the target server",
          "type": "boolean"
        },
        "headers": {
          "$ref": "#/definitions/Headers",
          "description": "Custom headers to be sent in response to OPTIONS requests"
        },
        "status": {
          "$ref": "#/definitions/StatusCode",
          "description": "Custom status code to be sent in response to OPTIONS requests"
        }
      },
      "type": "object"
    },
    "Queries": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "HTTP query parameters definition",
      "minProperties": 1,
      "type": "object"
    },
    "RawMockResponse": {
      "additionalProperties": false,
      "description": "Mock response definition based on raw content",
      "properties": {
        "code": {
          "$ref": "#/definitions/StatusCode"
        },
        "delay": {
          "$ref": "#/definitions/Duration",
          "description": "Delay before sending the mock response"
        },
        "headers": {
          "$ref": "#/definitions/Headers",
          "description": "HTTP headers which will be sent in the mock response"
        },
        "raw": {
          "description": "Content which will be sent in the mock response",
          "type": "string"
        }
      },
      "required": [
        "code",
        "raw"
      ],
      "type": "object"
    },
    "Rewrite": {
      "additionalProperties": false,
      "properties": {
        "from": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      },
      "required": [
        "from",
        "to"
      ],
      "type": "object"
    },
    "StaticDirectory": {
      "additionalProperties": false,
      "description": "Static serving directory definition",
      "properties": {
        "dir": {
          "description": "Path to the folder from which the static files will be served",
          "type": "string"
        },
        "index": {
          "default": "",
          "description": "The file witch will be returned if the requested file is not found. It should be a relative path within the dir folder",
          "type": "string"
        },
        "path": {
          "description": "Path where the static files will be served",
          "type": "string"
        }
      },
      "required": [
        "path",
        "dir"
      ],
      "type": "object"
    },
    "StatusCode": {
      "description": "HTTP response status code",
      "examples": [
        200,
        404,
        500
      ],
      "maximum": 599,
      "minimum": 100,
      "type": "integer"
    }
  },
  "description": "Configuration file for uncors reverse proxy",
  "properties": {
    "cache-config": {
      "additionalProperties": false,
      "description": "Global cache configuration",
      "properties": {
        "clear-time": {
          "description": "Expired cache clear time",
          "type": "string"
        },
        "expiration-time": {
          "description": "Cache expiration time",
          "type": "string"
        },
        "methods": {
          "default": [
            "GET"
          ],
          "description": "List of http methods with can be cached",
          "items": {
            "$ref": "#/definitions/Method"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "cert-file": {
      "description": "Path to HTTPS certificate file",
      "type": "string"
    },
    "debug": {
      "default": false,
      "description": "Show debug output",
      "type": "boolean"
    },
    "key-file": {
      "description": "Path to matching for certificate private key",
      "type": "string"
    },
    "mappings": {
      "description": "A list of mappings that describe how to forward requests. Ports are specified in the 'from' URL (e.g., http://localhost:8080).",
      "items": {
        "$ref": "#/definitions/Mapping"
      },
      "minItems": 1,
      "type": "array"
    },
    "proxy": {
      "description": "HTTP/HTTPS proxy to provide requests to real server (used system by default)",
      "format": "uri",
      "type": "string"
    }
  },
  "required": [
    "mappings"
  ],
  "title": "Uncors configuration",
  "type": "object"
}